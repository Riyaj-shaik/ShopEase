package com.example.ProjectEcommerce.Config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.http.HttpMethod;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
public class SecurityConfig {

	@Bean
	public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
	    http
	        .csrf(csrf -> csrf.disable())
	        .authorizeHttpRequests(auth -> auth
	            .requestMatchers("/api/auth/register", "/api/auth/login", "/api/auth/session").permitAll()
	            .requestMatchers(HttpMethod.GET, "/api/products/**").permitAll() // Public GET
	            .requestMatchers(HttpMethod.POST, "/api/products/**").hasRole("ADMIN") // Admin create
	            .requestMatchers(HttpMethod.PUT, "/api/products/**").hasRole("ADMIN")  // Admin update
	            .requestMatchers(HttpMethod.DELETE, "/api/products/**").hasRole("ADMIN") // Admin delete
	            .anyRequest().authenticated()
	        )
	        .formLogin(form -> form.disable())
	        .httpBasic(httpBasic -> httpBasic.disable())
	        .logout(logout -> logout.logoutUrl("/api/auth/logout").deleteCookies("JSESSIONID"));

	    return http.build();
	}

}
